package com.threading;

public class ThreadDemo extends Thread{
	
	// implicitly invoked when thread executes
	public void run() {
		//System.out.println("thread demo one is executed");
		System.out.println(Thread.currentThread().getName() + " " + Thread.currentThread().getId());
		for(int i=0; i<=10; i++) {
			System.out.println(i + " generated by " + Thread.currentThread().getName());
			try {
				Thread.sleep(2000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	public static void main(String[] args) {
		System.out.println(Thread.currentThread().getName() + " " + Thread.currentThread().getId());
		//ThreadDemo threadDemo1 = new ThreadDemo();
		//threadDemo1.setName("myThread");
		//threadDemo1.run(); // You can invoke run method but you should avoid it.
		//threadDemo1.start();
		
		
		/// run() method has blank implementation so it will be excecuted but no output.
//		Thread t1 = new Thread();
//		Thread t2 = new Thread();
//		Thread t3 = new Thread();
//		
//		t1.start();
//		t2.start();
//		t3.start();
		
		
		ThreadDemo threadDemo2 = new ThreadDemo();
		ThreadDemo threadDemo3 = new ThreadDemo();
		ThreadDemo threadDemo4 = new ThreadDemo();
		
		threadDemo2.start(); // thread-0
		threadDemo3.start(); // thread-1
		threadDemo4.start(); // thread-2
		
		
		
	}

}
